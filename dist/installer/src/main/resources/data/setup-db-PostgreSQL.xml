<?xml version="1.0"?>
<project name="setup-db-PostgreSQL" default="setup" basedir=".">

  <!-- true for text based installs -->
  <available property="server.pgsql.available" 
             file="${install.dir}/data/hqdb/pgsql.tar.gz"/>

  <target name="set-default-port" unless="server.postgresql.port">
    <property name="server.postgresql.port" value="9432"/>
  </target>

  <target name="validate" depends="set-default-port" if="server.pgsql.available">
    <!-- Do a sanity check - is anything listening on the PostgreSQL port? -->
    <condition property="server.postgresql.port.isAlreadyUsed">
      <socket server="127.0.0.1" port="${server.postgresql.port}"/>
    </condition>
    <antcall target="fail-if-db-port-used"/>
  </target>

  <target name="fail-if-db-port-used" if="server.postgresql.port.isAlreadyUsed">
    <fail>
      There is another program using port ${server.postgresql.port}, which is required
      for the built-in HQ database.

      Please run the setup program with the "-full" option so that you
      can pick either an alternate port or a different database to use
      for the HQ server.
    </fail>
  </target>

  <target name="setup"
          depends="set-default-port,dbsetup-builtin,dbsetup-standalone"/>

  <target name="dbsetup-standalone" unless="using.builtin.db">
    <ant antfile="setup-db-common.xml" target="replace-dbservice-values"/>
    <if>
      <istrue value="${server.database.create}" />
      <then>
        <ant antfile="setup-db-common.xml"
             target="dbsetup"/>
      	<ant antfile="setup-db-common.xml" target="subst-props"/>
      </then>
      <else>
        <echo>^^^INFO: Upgrading database...</echo>
        <ant antfile="setup-db-common.xml"
             target="upgrade-db"/>
      </else>
    </if>
  </target>

  <target name="dbsetup-builtin" if="using.builtin.db">
    <absolutePath property="absolute.server.dir" 
                  path="${server.product.dir}" />
    <property name="server.home"
              value="${server.product.dir}"/>
    <property name="engine.home"
              value="${server.product.dir}/hq-engine"/>

    <!-- Before doing any dbsetup stuff, make sure the kernel's shared
         memory and other parameters are properly tuned -->
    <condition property="should-tune-os">
      <and>
        <available file="${install.dir}/data/hqdb/tune-os.sh"/>
        <not><available file="/tmp/_hq-was-tuned"/></not>
        <isfalse value="${setup.upgrade}"/>
      </and>
    </condition>
    <antcall target="tune-os"/>

    <!-- Setup PostgreSQL -->
    <property name="server.hqdb.dir"
              value="${server.product.dir}/hqdb"/>

    <!-- Copy postgresql driver to server's lib dir -->
    <echo>^^^INFO: Setting up JDBC driver...</echo>
    <mkdir dir="${server.product.dir}/lib"/>
    <copy todir="${server.product.dir}/lib">
      <fileset dir="${install.dir}/lib">
        <include name="postgresql-9.1-901-A.jdbc4.jar"/>
      </fileset>
    </copy>

    <if>
      <istrue value="${setup.upgrade}" />
      <then>
      	<fail>
      	      Upgrading Hyperic server that uses the embedded database is not supported.
      	</fail>
        <!-- First copy the HQ database -->
        <echo>^^^INFO: Copying database, this may take some time...</echo>
        <!-- Can change this to move to preserve space -->
        <copy todir="${server.hqdb.dir}">
          <fileset dir="${server.upgradedir}/hqdb"/>
        </copy>
        <copy todir="${server.home}/bin">
          <fileset dir="${server.upgradedir}/bin" includes="db-*"/>
        </copy>
        <chmod perm="a+rx">
          <fileset dir="${server.hqdb.dir}/bin" includes="*"/>
          <fileset dir="${server.home}/bin" includes="db-*"/>
        </chmod>
    	<antcall target="changeDataFolderPermLinux"/>
        <antcall target="changeDataFolderPermWin"/>
      </then>
      <else>
        <!-- New installation, copy fresh postgres installation -->
        <echo>^^^INFO: Copying database files...</echo>
      	<!-- Remove previous install since this is supposed to be a new installation -->
      	<delete quiet="true">
    		<fileset dir="${server.hqdb.dir}"/>
		</delete>
        <antcall target="copy-pg"/>
        <echo>^^^INFO: Configuring database...</echo>
        <replace file="${server.hqdb.dir}/data/postgresql.conf"
                 token="@@@PGPORT@@@" value="${server.postgresql.port}"/>

        <!-- Replace postgresql port in the db scripts -->
        <replace dir="${server.home}/bin"
                 token="@@@PGPORT@@@" value="${server.postgresql.port}"/>

        <!-- XXX: recreate symlinks.. lame -->
        <antcall target="recreate-symlinks"/>
        <delete dir="${server.hqdb.dir}" includes="**/dir.links"/>
      	<antcall target="changeDataFolderPermLinux"/>
      	<antcall target="changeDataFolderPermWin"/>
        <ant antfile="setup.xml" target="chmod-exec">
        <property name="chmod.dir"
                  value="${server.product.dir}/hqdb"/>
        </ant>
      </else>
    </if>

    <!-- Start Postgres and do post setup configuration -->
    <ant antfile="setup-db-common.xml" target="replace-dbservice-values"/>
    <echo>^^^DEBUG: Starting repopulation of configuration table...</echo>
    <trycatch>
      <try>
        <parallel>
          <antcall target="start-pg"/>
    	  <sequential>
            <antcall target="wait-pg"/>
            <sleep seconds="5"/>
            <echo>^^^INFO: Preparing database...</echo>
            <if>
              <istrue value="${setup.upgrade}" />
            <then>
              <!-- Upgrade the database to new schema -->
              <ant antfile="setup-db-common.xml"
                   target="upgrade-db"/>
            </then>
            <else>
              <!-- New install, full dbsetup -->
              <ant antfile="setup-db-common.xml" target="dbsetup"/>
    		  <ant antfile="setup-db-common.xml" target="subst-props"/>
            </else>
            </if>
          </sequential>
        </parallel>
      </try>
      <finally>
	    <antcall target="stop-pg"/>
      </finally>
    </trycatch>
  </target>
  

	  <target name="changeDataFolderPermLinux" unless="isWin32">
	  	 <chmod dir="${server.hqdb.dir}/data" perm="700"/>
	  </target>

	  <target name="changeDataFolderPermWin" if="isWin32">	  	          
	  	<exec Command="icacls &quot;${server.hqdb.dir}/data&quot; /grant &quot;*S-1-1-0&quot;:(OI)(CI)M"/>
	  	<exec Command="icacls &quot;${server.hqdb.dir}/../logs&quot; /grant &quot;*S-1-1-0&quot;:(OI)(CI)M"/>
	  </target>
	
  <target name="copy-pg" if="server.pgsql.available">
    <condition property="script-ext" value=".bat">
      <os family="windows"/>
    </condition>
    <condition property="script-ext" value=".sh">
      <os family="unix"/>
    </condition>

    <mkdir dir="${server.hqdb.dir}"/>
    <!--
       - Only reason for this is to preserve the symlinks for PG, ant untar does not preserve symlinks
       - bug: https://issues.apache.org/bugzilla/show_bug.cgi?id=19252
      -->
    <antcall target="untarLinux"/>
    <antcall target="untarWin"/>

    <copy todir="${server.home}/bin">
      <fileset dir="${install.dir}/bin" includes="db-*${script-ext}"/>
    </copy>
    <chmod perm="a+rx">
      <fileset dir="${server.home}/bin" includes="db-*${script-ext}"/>
    </chmod>
  </target>

  <target name="start-pg" if="server.pgsql.available">
    <ant antfile="${install.dir}/data/server.xml"
         target="start-postgresql"/>
  </target>
  <target name="wait-pg" if="server.pgsql.available">
    <ant antfile="${install.dir}/data/server.xml"
         target="wait-postgresql"/>
  </target>

  <target name="stop-pg" if="server.pgsql.available">
    <ant antfile="${install.dir}/data/server.xml"
         target="stop-postgresql"/>
  </target>

  <target name="untarLinux" unless="isWin32">
    <exec executable="tar" os="Linux">
      <arg value="xvfz"/>
      <arg value="${install.dir}/data/hqdb/pgsql.tar.gz"/>
      <arg value="-C"/>
      <arg value="${server.hqdb.dir}"/>
    </exec>
    <copy todir="${server.hqdb.dir}/data">
       <fileset dir="${install.dir}/data/hqdb/conf"
                includes="**"/>
     </copy>
  </target>

  <target name="untarWin" if="isWin32">
    <untar src="${install.dir}/data/hqdb/pgsql.tar.gz"
           overwrite="false"
           dest="${server.hqdb.dir}"
           compression="gzip"/>
    <copy todir="${server.hqdb.dir}/data">
      <fileset dir="${install.dir}/data/hqdb/conf"
               includes="**"/>
    </copy>
  </target>

  <target name="recreate-symlinks" unless="isWin32">
    <symlink action="recreate" linkfilename="dir.links"
             relative="true" overwrite="true">
      <fileset dir="${server.hqdb.dir}"
               includes="lib/**/dir.links,bin/**/dir.links"/>
    </symlink>
  </target>

  <target name="tune-os" if="should-tune-os">
    <echo>^^^INFO:__ll__
</echo>
    <input>
Now login to another terminal as root and execute this script:

    ${install.dir}/data/hqdb/tune-os.sh

This script sets up the proper shared memory settings to run the
built-in database.

Press Enter after you run the script to continue this installation.
</input>
    <echo>^^^INFO:__ll__
</echo>
    <available file="/tmp/_hq-was-tuned" property="tuned.ok"/>
    <msgfail unless="tuned.ok">^^^ERROR:\
You must run this script as root:
  ${install.dir}/data/hqdb/tune-os.sh
before continuing the installation.
    </msgfail>
  </target>

</project>

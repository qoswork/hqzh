
   <!-- Hibernate common targets -->

  <property name="build.dir" location="${install.dir}/tmp" />
  <property name="hibernate-properties-gen" location="${build.dir}/hibernate/hibernate.properties" />
  
  
  <target name="common-taskdefs" unless="init-taskdefs.notrequired">
    <taskdef name="for" classname="net.sf.antcontrib.logic.For">
      <classpath>
        <fileset dir="${install.dir}/lib" includes="*.jar"/>
      </classpath>
    </taskdef>
  </target>

  <target name="hibernate-init-taskdefs" depends="common-taskdefs"
          unless="hibernate-init-taskdefs.notrequired">
    <taskdef name="hibernatetool"
             classname="org.hibernate.tool.ant.HibernateToolTask">
      <classpath>
        <fileset dir="${install.dir}/lib" includes="*.jar"/>
      </classpath>
    </taskdef>
    <property name="hibernate-init-taskdefs.notrequired" value="true"/>
  </target>

  <target name="hibernate-taskdefs" depends="hibernate-init-taskdefs">
    <switch value="${server.database}">
      <case value="Oracle8">
        <property name="hyperic.dialect" value="Oracle" />
      </case>
      <case value="Oracle9i">
        <property name="hyperic.dialect" value="Oracle9" />
        <property name="hibernate.dialect" value="org.hyperic.hibernate.dialect.${hyperic.dialect}Dialect" />
      </case>
      <case value="Oracle10g">
        <property name="hyperic.dialect" value="Oracle9" />
        <property name="hibernate.dialect" value="org.hyperic.hibernate.dialect.${hyperic.dialect}Dialect" />
      </case>
      <case value="PostgreSQL">
        <property name="hyperic.dialect" value="PostgreSQL" />
        <property name="hibernate.dialect" value="org.hyperic.hibernate.dialect.${hyperic.dialect}Dialect" />
      </case>
      <case value="MySQL">
		<property name="include.hq.sequence.table" value="true" />
        <property name="hyperic.dialect" value="MySQL5InnoDB" />
        <property name="hibernate.dialect" value="org.hyperic.hibernate.dialect.${hyperic.dialect}Dialect" />
      </case>
      <default>
        <property name="hibernate.dialect" value="org.hibernate.dialect.${hyperic.dialect}Dialect" />
        <fail>
        Unrecognized datasource mapping name: ${server.database}
        </fail>
      </default>
    </switch>
  </target>

  <target name="hibernate-prep" depends="hibernate-taskdefs">
	<mkdir dir="${build.dir}"/>
	<mkdir dir="${build.dir}/hibernate"/>
    <property name="hibernate.connection.url" value="${server.database-url}" />
    <property name="hibernate.connection.driver_class" value="${server.database-driver}" />
    <property name="hibernate.connection.username" value="${server.database-user}" />
    <property name="hibernate.connection.password" value="${server.database-password}" />
    <property name="hibernate.connection.pool_size" value="0" />
	<property name="hq.schema.statement.delimiter" value=";"/>
	<property name="hq.schema.export" value="true"/>

	<condition property="create.hibernate.configurations.file" value="${create.hibernate.configurations.file}" else="${install.dir}/data/hibernate.cfg.xml"> 
	   <isset property="create.hibernate.configurations.file" />
    </condition>
    
    <condition property="drop.hibernate.configurations.file" value="${drop.hibernate.configurations.file}" else="${install.dir}/data/hibernate.cfg.xml"> 
	   <isset property="drop.hibernate.configurations.file" />
    </condition>

    <echoproperties destfile="${hibernate-properties-gen}" format="text">
      <propertyset>
        <propertyref name="hibernate.dialect"/>
        <propertyref name="hibernate.connection.url"/>
        <propertyref name="hibernate.connection.driver_class"/>
        <propertyref name="hibernate.connection.username"/>
        <propertyref name="hibernate.connection.password"/>
        <propertyref name="hibernate.connection.password"/>
        <propertyref name="hibernate.connection.pool_size"/>
		<propertyref name="hq.schema.statement.delimiter"/>
		<propertyref name="hq.schema.export"/>
      </propertyset>
    </echoproperties> 
    
      <replace file="${install.dir}/data/hibernate.cfg.xml">
      	<replacefilter token="@@@INSTALLDIR@@@" value="${install.dir}" />
	 </replace>
  </target>

  <target name="hibernate-schema-create-init">
    <delete failonerror="false" file="${build.dir}/sql/hibernate.sql" />
    <mkdir dir="${build.dir}/sql" />
  </target>
	
  <target name="hibernate-schema-create" depends="hibernate-prep,hibernate-schema-create-init">
    <hibernatetool>
      <classpath>
	<path refid="alljars"/>
      </classpath>
      <configuration propertyFile="${hibernate-properties-gen}" configurationfile="${create.hibernate.configurations.file}" />
  
      <hbm2ddl
          destdir="${build.dir}/sql"
          outputFileName="hibernate.sql"
          drop="false"
          create="true"
          update="false"
          format="true"
          console="true"
          export="true"
          delimiter=";"
          haltonerror="true"
          />
    </hibernatetool>
  </target>

  <target name="hibernate-schema-create-import" depends="hibernate-prep,hibernate-schema-create-init">
    <hibernatetool>
      <classpath>
        <!-- fix for HQ-4700: problem was that the hibernate-tool requires the old version
                 but the (original) class path that uses the 'alljars' reference contains only the new one.
                 The fix consists of removing the 'offending' (new) jar and artificially adding the old one - as
                 copied by the export script to the staging dir -->
        <fileset dir="${install.dir}/lib">
                <patternset>
                        <include name="*.jar"/>
                        <exclude name="hq-server-*.jar"/>
                </patternset>
        </fileset>
        <fileset dir="${staging.dir}${file.separator}source-artifacts${file.separator}lib" includes="hq-server-*.jar"/>
      </classpath>
      <configuration propertyFile="${hibernate-properties-gen}" configurationfile="${create.hibernate.configurations.file}" />

      <hbm2ddl
          destdir="${build.dir}/sql"
          outputFileName="hibernate.sql"
          drop="false"
          create="true"
          update="false"
          format="true"
          console="true"
          export="true"
          delimiter=";"
          haltonerror="true"
          />
    </hibernatetool>
  </target>

  <target name="hibernate-schema-drop" depends="hibernate-prep">

    <delete failonerror="false" file="${build.dir}/sql/hibernate.sql" />
    <mkdir dir="${build.dir}/sql" />
    <hibernatetool>
    	  <classpath>
			<path refid="alljars"/>
	      </classpath>
	      <configuration propertyFile="${hibernate-properties-gen}" configurationfile="${drop.hibernate.configurations.file}">
      </configuration>

      <hbm2ddl
          destdir="${build.dir}/sql"
          outputFileName="hibernate.sql"
          drop="true"
          create="false"
          update="false"
          format="true"
          console="true"
          export="true"
          delimiter=";"
          />
    </hibernatetool>
  </target>

  <target name="hibernate-setup-import" depends="hibernate-schema-drop,hibernate-schema-create-import" />

  <target name="hibernate-setup" depends="hibernate-schema-drop,hibernate-schema-create" />

  <target name="hibernate-drop" depends="hibernate-schema-drop" />

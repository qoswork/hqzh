# Template for agent.properties for each of the clones


agent.setup.camIP=@CLONE_SERVERIP@
agent.setup.camPort=@CLONE_SERVER_PORT@
agent.setup.camSSLPort=7443
agent.setup.camSecure=@CLONE_SECURE@
agent.setup.camLogin=hqadmin
agent.setup.camPword=hqadmin
agent.setup.agentIP=*default*
agent.setup.agentPort=@CLONE_LISTENPORT@
agent.setup.resetupTokens=no

agent.listenPort=@CLONE_LISTENPORT@
platform.fqdn=@CLONE_FQDN@

agent.tmpDir=./tmp

# required to find server/lib/weblogic.jar
#weblogic.installpath=/usr/local/bea/weblogic-8.1

# required to find websphere jars
#websphere.installpath=/opt/WebSphere/AppServer

# required to find jboss jars
#jboss.installpath=/usr/local/jboss-4.0.0

# mirror /proc/net/tcp on linux
sigar.mirror.procnet=true

##
## Logging settings
##
agent.logFile=${agent.logDir}/agent.log
agent.logLevel=INFO
log4j.rootLogger=${agent.logLevel}, R

log4j.appender.R.File=${agent.logFile}
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.MaxFileSize=5000KB
log4j.appender.R.layout.ConversionPattern=%d %-5p [%t] [%c{1}] %m%n
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R=org.apache.log4j.RollingFileAppender

#redirect System.{err,out} to agent.log
#commenting out will leave System.{out,err} directed to agent.log.startup
#agent.logLevel.SystemErr=ERROR
#agent.logLevel.SystemOut=INFO

##
## Disable overly verbose logging 
##
log4j.logger.httpclient.wire=ERROR
log4j.logger.org.apache.commons.httpclient=WARN
log4j.logger.org.hyperic.hq.measurement.agent.server.SenderThread=INFO
log4j.logger.org.hyperic.hq.agent.server.AgentDListProvider=INFO
log4j.logger.org.hyperic.hq.agent.server.MeasurementSchedule=INFO
log4j.logger.org.hyperic.util.units=INFO
log4j.logger.org.hyperic.hq.product.pluginxml=INFO

# Only log errors from naming context
log4j.category.org.jnp.interfaces.NamingContext=ERROR
log4j.category.org.apache.axis=ERROR

##
## Agent Jars
##
agent.pdkLibDir=./pdk/lib
agent.pdkPluginDir=./pdk/plugins

## Agent Product Jar - Needed for upgrade process
agent.hqProductJar=./pdk/lib/hq-product.jar

##
## Auto-inventory options
##
# Set default scan to run once every week
autoinventory.defaultScan.interval.millis=-1
autoinventory.runtimeScan.interval.millis=86400000

## Agent classpath (pdk/lib/*.{jar,zip} are included by default)
agent.classPath=\
./lib/AgentServer.jar:\
./lib/hq-lather-@AGENT_BUILD_VERSION@.BUILD-SNAPSHOT.jar
#./lib/lather.jar


##
## Disable deprecated response time feature by default
##
hq.plugins.responsetime.disable=true

## Options to pass to java
agent.javaOpts=-Xmx128m -Djava.net.preferIPv4Stack=true
agent.setup.unidirectional=no

# Setting plugin.base allows us exclude netservices and sqlquery plugins
plugins.base=system

# exclude all plugins except system and hq-agent
#plugins.exclude=activemq,alfresco,apache,bind,coldfusion,db2,dotnet,exchange,geronimo,glassfish,hq-internal,hq-inventory,hyper_v,iis,informix,iplanet,jboss,jetty,jmx,jvm-jmx-metrics,memcached,mqseries,mssql,multi-process-metrics,mysql,mysql_stats,nagios,netdevice,netservices,ntds,ntp,oc4j,openldap,oracle,perlbal,postfix,postgresql,resin,samba,sendmail,servlet,spring,sqlquery,sun-jvm-service,sybase,tomcat,vim,vmware,weblogic,websphere,xen,zimbra,groovy-scripting,gemfire,vsphere,db2jdbc,rabbitmq,wsmq,netapp,springsource-tcserver
# plugin.include work better for our case
plugins.include=system,hqagent,testdata

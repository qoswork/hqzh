%define HQ_Component_Name       hyperic-hqee-installer
%define HQ_Component_Version    @hq.version@
%define HQ_Component_Edition	EE
%define HQ_Component_Build	x86-linux
%define HQ_Component_Release   	EE.1 
%define HQ_Component_Build_Type @hq.build.type@

%define HQ_User			hyperic
%define HQ_Group		hyperic
%define HQ_User_Home		/opt/hyperic

AutoReqProv:    no

# Requires Sun's Java, which must currently be downloaded directly from Sun
# at http://java.sun.com.
#Requires:	j2re
Requires:	expect

Name:           %{HQ_Component_Name}
Version:        %{HQ_Component_Version}
Release:        %{HQ_Component_Release}
Summary:        %{HQ_Component_Name}
Source0:        %{HQ_Component_Name}-%{HQ_Component_Version}-%{HQ_Component_Build}.tar.gz
Vendor:		Hyperic, Inc.
License:        Commercial
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root
Group:          Applications/Monitoring
Packager: 	Hyperic Support <support@hyperic.com>
Prefix:		%{HQ_User_Home}
Url: 		http://www.hyperic.com
ExclusiveArch:	i386
ExclusiveOS:	linux

%description

Server for the Hyperic HQ systems management system.

%prep

[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT

%setup -T -b 0 -n %{HQ_Component_Name}-%{HQ_Component_Version}

%pre

# If hq-server is already installed and running (whether installed by RPM
# or not), then kill it, but remember that it was running.
%{__rm} -f /tmp/hyperic-hq-server-was-running-%{version}-%{release}
if [ -f /etc/init.d/hyperic-hq-server ]; then
    /sbin/service hyperic-hq-server stop > /dev/null 2> /dev/null
    touch /tmp/hyperic-hq-server-was-running-%{version}-%{release}
elif [ -f %{prefix}/server-current ]; then
    %{prefix}/server-current/bin/hq-server.sh stop
fi

#
# Create a user and group if need be
#
if [ ! -n "`/usr/bin/getent group %{HQ_Group}`" ]; then
    # One would like to default the GID, but doing that properly would
    # require thought.
    %{_sbindir}/groupadd %{HQ_Group} 2> /dev/null
fi
if [ ! -n "`/usr/bin/getent passwd %{HQ_User}`" ]; then
    # One would also like to default the UID, but doing that properly would
    # also require thought.
    %{__mkdir} -p -m 755 %{HQ_User_Home}
    %{_sbindir}/useradd -g %{HQ_Group} -d %{HQ_User_Home} %{HQ_User} 2> /dev/null
    chown -R %{HQ_User}.%{HQ_Group} %{HQ_User_Home}
else
    %{__mkdir} -p -m 755 %{prefix}
    chown %{HQ_User}.%{HQ_Group} %{prefix}
fi

exit 0

%preun

# If hq-server is already installed and running (whether installed by RPM
# or not), then kill it, but remember that it was running.
if [ -f /etc/init.d/hyperic-hq-server ]; then
    /sbin/service hyperic-hq-server stop > /dev/null 2> /dev/null
fi
chkconfig --del hyperic-hq-server

%build


%install

%{__install} -d -m 755 $RPM_BUILD_ROOT/etc/init.d
%{__install} -d -m 755 $RPM_BUILD_ROOT%{prefix}/%{HQ_Component_Name}
%{__install} -d -m 755 $RPM_BUILD_ROOT/%{prefix}/hq-plugins
%{__install} -m 755 rcfiles/hyperic-hq-server.init.rh $RPM_BUILD_ROOT/etc/init.d/hyperic-hq-server

%{__rm} -f installer/lib/sigar-x86-winnt.lib
%{__mv} -f * $RPM_BUILD_ROOT/%{prefix}/%{HQ_Component_Name}

#echo "Place custom plug-ins in this directory." > $RPM_BUILD_ROOT/%{prefix}/hq-plugins/README

%clean

[ "$RPM_BUILD_ROOT" != "/" ] && rm -rf $RPM_BUILD_ROOT

%post

#
# Setup the HQ Server using the Hyperic installer process
#
if [ -d /opt/hyperic/server-current ] && cd /opt/hyperic/server-current; then
        cd %{prefix}/%{name}
        /bin/su hyperic -c "expect/upgrade.exp %{prefix}/server-current %{prefix}"
        #/bin/su hyperic -c "expect/upgrade.exp %{prefix}/server-current %{prefix}" > /dev/null 2> /dev/null
        #echo "%{prefix}/server-current/hqdb/bin/postgres -D %{prefix}/server-current/hqdb/data -i" > %{prefix}/server-%{version}-%{HQ_Component_Edition}/hqdb/data/postmaster.opts
        cd $RPM_BUILD_ROOT/%{prefix}
        /bin/su hyperic -c "/bin/ln -snf server-%{version}-%{HQ_Component_Edition} server-current"
else
	cd %{prefix}/%{name}
        installer/data/hqdb/tune-os.sh > /dev/null 2> /dev/null
        /bin/su hyperic -c "expect/install_ee.exp %{prefix}" 
        #/bin/su hyperic -c "expect/install_ee.exp %{prefix}" > /dev/null 2> /dev/null
        #echo "%{prefix}/server-current/hqdb/bin/postgres -D %{prefix}/server-current/hqdb/data -i" > %{prefix}/server-%{version}-%{HQ_Component_Edition}/hqdb/data/postmaster.opts
        cd $RPM_BUILD_ROOT/%{prefix}
        /bin/su hyperic -c "/bin/ln -snf server-%{version}-%{HQ_Component_Edition} server-current"
fi
%{__cp} %{prefix}/%{name}/installer/logs/hq-install.log %{prefix}/server-%{version}-%{HQ_Component_Edition}/hq-install.log
%{__rm} -Rf %{prefix}/%{name}

%postun

if [ ! -f /etc/init.d/hyperic-hq-server ]; then
	%{__rm} -Rf %{prefix}/server-current %{prefix}/server-%{version}-%{HQ_Component_Edition}
fi

%posttrans

if [ -f /etc/init.d/hyperic-hq-server ]; then
    chkconfig --add hyperic-hq-server
    chkconfig hyperic-hq-server on
fi
if [ -f /etc/init.d/hyperic-hq-server ] && [ -f /tmp/hyperic-hq-server-was-running-%{version}-%{release} ]; then
    /sbin/service hyperic-hq-server start > /dev/null 2> /dev/null
    %{__rm} -f /tmp/hyperic-hq-server-was-running-%{version}-%{release}
    echo
    echo "The new version of HQ Server has been started using your existing configuration."
    echo "The installation log can be found in %{prefix}/server-%{version}-%{HQ_Component_Edition}/hq-install.log."
    echo "Manually starting the HQ Server should be done using the hyperic user."
    echo
elif [ -f /etc/init.d/hyperic-hq-server ]; then
    echo
    echo "The HQ Server has successfully been installed, and the service has been"
    echo "configured to start at boot."
    echo "The installation log can be found in %{prefix}/server-%{version}-%{HQ_Component_Edition}/hq-install.log."
    echo "Manually starting the HQ Server should be done using the hyperic user."
    echo
fi
exit 0

%files

%defattr (-, root, root)
/etc/init.d/*
%defattr (-, %{HQ_User}, %{HQ_Group})
%{prefix}/%{HQ_Component_Name}
%config %{prefix}/hq-plugins

%changelog
* Thu Apr 22 2010 Hyperic Support <support@hyperic.com> 4.2.0.7
* Tue Mar  9 2010 Hyperic Support <support@hyperic.com> 4.2.0
* Tue Jan 26 2010 Hyperic Support <support@hyperic.com> 4.2.0
* Sat Jan 23 2010 Hyperic Support <support@hyperic.com> 4.2.0.4
* Fri Jan 15 2010 Hyperic Support <support@hyperic.com> 4.2.0.3
* Wed Dec 16 2009 Hyperic Support <support@hyperic.com> 4.2.0
* Tue Dec  8 2009 Hyperic Support <support@hyperic.com> 4.2.0.2
* Thu Nov 19 2009 Hyperic Support <support@hyperic.com> 4.2.0.1
* Mon Nov  9 2009 Hyperic Support <support@hyperic.com> 4.2.0
* Mon Nov  9 2009 Hyperic Support <support@hyperic.com> 4.2.0
* Thu Nov  5 2009 Hyperic Support <support@hyperic.com> 4.2.0
* Tue Oct 13 2009 Hyperic Support <support@hyperic.com> 4.1.4
* Tue Oct 13 2009 Hyperic Support <support@hyperic.com> 4.1.4.1
* Tue Oct 13 2009 Hyperic Support <support@hyperic.com> 4.1.4
* Thu Oct  1 2009 Hyperic Support <support@hyperic.com> 4.1.2.1
* Tue Aug 25 2009 Hyperic Support <support@hyperic.com> 4.1.2
* Thu Jun 25 2009 Hyperic Support <support@hyperic.com> 4.1.2
* Thu Jun 11 2009 Hyperic Support <support@hyperic.com> 4.1.3
* Wed Jun 10 2009 Hyperic Support <support@hyperic.com> 4.1.3
* Tue Jun  9 2009 Hyperic Support <support@hyperic.com> 4.1.3
* Thu May  7 2009 Hyperic Support <support@hyperic.com> 4.1.2
* Fri May  1 2009 Hyperic Support <support@hyperic.com> 4.1.1
* Mon Apr  6 2009 Hyperic Support <support@hyperic.com> 4.1.1
* Fri Mar  6 2009 Hyperic Support <support@hyperic.com> 4.1.0
* Thu Feb 26 2009 Hyperic Support <support@hyperic.com> 4.0.3
* Thu Jan 29 2009 Hyperic Support <support@hyperic.com> 4.0.3
* Fri Dec 19 2008 Hyperic Support <support@hyperic.com> 4.0.2
* Fri Nov  7 2008 Hyperic Support <support@hyperic.com> 4.0.1
* Mon Oct 27 2008 Hyperic Support <support@hyperic.com> 4.0.0
* Mon Oct 27 2008 Hyperic Support <support@hyperic.com> 4.0.0
* Mon Oct 27 2008 Hyperic Support <support@hyperic.com> 4.0.0
* Sat Aug 30 2008 Hyperic Support <support@hyperic.com> 3.2.5
* Mon Jul  7 2008 Hyperic Support <support@hyperic.com> 3.2.4
* Mon Jun 30 2008 Hyperic Support <support@hyperic.com> 3.2.4
* Thu Apr 17 2008 Hyperic Support <support@hyperic.com> 3.2.3-EE-x86-linux-1
* Tue Mar 25 2008 Hyperic Support <support@hyperic.com> 3.2.2-EE-x86-linux-1
* Thu Feb 28 2008 Hyperic Support <support@hyperic.com> 3.2.1-EE-x86-linux-1
* Wed Jan 29 2008 Hyperic Support <support@hyperic.com> 3.2.0-EE-x86-linux-1
- Initial release.
